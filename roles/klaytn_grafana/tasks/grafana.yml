# description: Setup grafana
- name: "Make data and configuration directory"
  file:
    path: "{{ item }}"
    state: "directory"
  with_items:
    ["{{ grafana_conf_dir }}/provisioning/datasources", "{{ grafana_conf_dir }}/provisioning/dashboards", "{{ influxdb_data_dir }}"]
  become: yes

- name: "Generate random strings for InfluxDB password"
  set_fact:
    adminpass: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters') }}"
    userpass: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters') }}"

- name: "Grafana Configuration with templates"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    force: yes
  become: yes
  with_items:
    - { src: "templates/prometheus.yml.j2", dest: "{{ grafana_conf_dir }}/prometheus.yml" }
    - { src: "templates/klaytn.yml.j2", dest: "{{ grafana_conf_dir }}/provisioning/datasources/klaytn.yml" }

- name: "Copy static files"
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "templates/klaytn-dashboard.yml", dest: "{{ grafana_conf_dir }}/provisioning/dashboards/klaytn-dashboard.yml" }
    - { src: "templates/grafana_klaytn.json", dest: "{{ grafana_conf_dir }}/provisioning/dashboards/grafana_klaytn.json" }
    - { src: "templates/grafana_klaytn_data.json", dest: "{{ grafana_conf_dir }}/provisioning/dashboards/grafana_klaytn_data.json" }
    - { src: "templates/grafana_klaytn_leveldb.json", dest: "{{ grafana_conf_dir }}/provisioning/dashboards/grafana_klaytn_leveldb.json" }
    - { src: "templates/grafana_klaytn_miner.json", dest: "{{ grafana_conf_dir }}/provisioning/dashboards/grafana_klaytn_minor.json" }
    - { src: "templates/grafana_klaytn_network.json", dest: "{{ grafana_conf_dir }}/provisioning/dashboards/grafana_klaytn_network.json" }
    - { src: "templates/grafana_klaytn_service_chain.json", dest: "{{ grafana_conf_dir }}/provisioning/dashboards/grafana_klaytn_service_chain.json" }
    - { src: "templates/grafana_klaytn_log.json", dest: "{{ grafana_conf_dir }}/provisioning/dashboards/grafana_klaytn_log.json" }
  become: yes

- name: "Install docker"
  shell: "curl -fsSL https://get.docker.com -o get-docker.sh && sh get-docker.sh"
  become: yes

- name: "Start docker daemon"
  systemd:
    name: docker
    state: started
    enabled: yes
  become: yes

- name: Install pip
  shell: "curl -fsSL https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py && python get-pip.py"
  become: yes

- name: Install docker python package
  pip:
    name: docker
    extra_args: "--ignore-installed"
  become: yes

- name: "Run promtheus docker"
  docker_container:
    name: prometheus
    image: prom/prometheus
    volumes:
      - /etc/grafana/conf/prometheus.yml:/etc/prometheus/prometheus.yml
    network_mode: host
    restart_policy: always
    state: started
    detach: yes
  become: yes

- name: "Run influxdb docker"
  docker_container:
    name: influxdb
    image: influxdb:1.8
    volumes:
      - "{{ influxdb_data_dir }}:/var/lib/influxdb"
    env:
      INFLUXDB_DB: klaytn_logs
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: "{{ adminpass }}"
      INFLUXDB_USER: user
      INFLUXDB_USER_PASSWORD: "{{ userpass }}"
      INFLUXDB_HTTP_BIND_ADDRESS: ":{{ influxdb_port }}"
    network_mode: host
    restart_policy: always
    state: started
    detach: yes
  become: yes

- name: "Run grafana docker"
  docker_container:
    name: grafana
    image: grafana/grafana
    volumes:
      - /etc/grafana/conf/provisioning:/etc/grafana/provisioning
    network_mode: host
    restart_policy: always
    state: started
    detach: yes
  become: yes

- name: "Restart Docker daemon"
  command: /bin/true
  notify:
    - restart docker daemon
