# For nodes except for SCN, generate nodekey using kgen
- name: Klaytn kgen tool - Create Directory
  file:
    path: "{{ homi_root }}/kgen"
    state: directory
    mode: "0755"
  tags: "launchKgen"
  when:
    - not remoteNode|bool

- name: Klaytn kgen tool - Download Package
  get_url:
    url: "http://packages.klaytn.net/klaytn/{{ klaytn_homi.version }}/kgen-{{klaytn_homi.version }}-0-linux-amd64.tar.gz"
    dest: "{{ homi_root }}/klaytn-kgen-tool.tar.gz"
  tags: "launchKgen"
  when:
    - not remoteNode|bool
    - ansible_system == "Linux"

- name: Klaytn kgen Tool - Download Package
  get_url:
    url: "http://packages.klaytn.net/klaytn/{{ klaytn_homi.version }}/kgen-{{klaytn_homi.version }}-0-darwin-10.10-amd64.tar.gz"
    dest: "{{ homi_root }}/klaytn-kgen-tool.tar.gz"
  when:
    - not remoteNode|bool
    - ansible_os_family == "Darwin"

- name: Klaytn kgen tool - Unarchive Package
  unarchive:
    src: "{{ homi_root }}/klaytn-kgen-tool.tar.gz"
    dest: "{{ homi_root }}/kgen"
    list_files: yes
    keep_newer: yes
  register: extract_result
  tags: "launchKgen"
  when:
    - not remoteNode|bool

- name: Klaytn kgen tool - Set kgen binary path
  set_fact:
    kgen_bin: "{{ homi_root }}/kgen/{{ extract_result.files[-1] }}"
    static_nodes_json_en: []
    static_nodes_json_sen: []
    static_nodes_knis_en: []
    static_nodes_knis_sen: []
  tags: "launchKgen"
  when:
    - not remoteNode|bool

- name: Klaytn kgen tool - Launch kgen
  shell: |
    {{ kgen_bin }} --file && \
    mv {{ homi_root }}/kgen/keys/nodekey {{ homi_root }}/kgen/keys/nodekey_{{ item }} && \
    mv {{ homi_root }}/kgen/keys/node_info.json {{ homi_root }}/kgen/keys/node_info_{{ item }}.json
  args:
    chdir: "{{ homi_root }}/kgen"
  loop: "{{ [ groups['CypressPN'], groups['CypressEN'], groups['ServiceChainPN'], groups['ServiceChainEN'] ] | flatten(1) }}"
  tags: "launchKgen"
  when:
    - not remoteNode|bool
    - item != ""

- name: Klaytn kgen tool - Get private IP
  shell: "hostname -I"
  register: hostname
  tags: "launchKgen"
  when:
    - remoteNode|bool
    - klaytn_service_type is not search("en")

- name: Klaytn kgen tool - Set private IP variable
  set_fact:
    privateIP: "{{ hostname.stdout | trim }}"
  when:
    - remoteNode|bool
    - klaytn_service_type is not search("en")

- name: Klaytn kgen tool - Modify node_info.json file
  replace:
    path: "{{ homi_root }}/kgen/keys/node_info_{{ item }}.json"
    regexp: "(@[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\:\\d{1,5}\\?)"
    replace: "@{{ hostvars[item]['privateIP'] }}?"
  loop: "{{ [ groups['CypressPN'], groups['ServiceChainPN'] ] | flatten(1) }}"
  when:
    - not remoteNode|bool

- name: Klaytn kgen tool - Get static nodes json variable for EN
  set_fact:
    static_nodes_json_en:  "{{ static_nodes_json_en + [ lookup('file', homi_root + '/kgen/keys/node_info_{{ item }}.json') | from_json  ] }}"
  loop: "{{ groups['CypressPN'] }}"
  loop_control:
    index_var: pn_idx
  when:
    - not remoteNode|bool
    - groups["CypressEN"] is defined and (groups["CypressEN"]|length>0)
    - groups["CypressPN"] is defined and (groups["CypressPN"]|length>0)

- name: Klaytn kgen tool - Get static nodes json variable for SEN
  set_fact:
    static_nodes_json_sen:  "{{ static_nodes_json_sen + [ lookup('file', homi_root + '/kgen/keys/node_info_{{ item }}.json') | from_json  ] }}"
  loop: "{{ groups['ServiceChainPN'] }}"
  loop_control:
    index_var: pn_idx
  when:
    - not remoteNode|bool
    - groups["ServiceChainEN"] is defined and (groups["ServiceChainEN"]|length>0)
    - groups["ServiceChainPN"] is defined and (groups["ServiceChainPN"]|length>0)

- name: Klaytn kgen tool - Export kni address from static nodes json variable for EN
  set_fact:
    # Add p2p port after IP address in each KNIs
    static_nodes_knis_en: "{{ static_nodes_knis_en + [ ( item['NodeInfo'] | replace('?', ':32323?') ) ] }}"
  with_items: "{{ static_nodes_json_en }}"
  when:
    - not remoteNode|bool
    - groups["CypressEN"] is defined and (groups["CypressEN"]|length>0)
    - groups["CypressPN"] is defined and (groups["CypressPN"]|length>0)

- name: Klaytn kgen tool - Export kni address from static nodes json variable for SEN
  set_fact:
    # Add p2p port after IP address in each KNIs
    static_nodes_knis_sen: "{{ static_nodes_knis_sen + [ ( item['NodeInfo'] | replace('?', ':32323?') ) ] }}"
  with_items: "{{ static_nodes_json_sen }}"
  when:
    - not remoteNode|bool
    - groups["ServiceChainEN"] is defined and (groups["ServiceChainEN"]|length>0)
    - groups["ServiceChainPN"] is defined and (groups["ServiceChainPN"]|length>0)

- name: Klaytn kgen tool - Generate static-nodes.json for ENs
  copy:
    content: "{{ static_nodes_knis_en }}"
    dest: "{{ homi_root }}/output/static-nodes-en.json"
    force: yes
  when:
    - not remoteNode|bool
    - groups["CypressEN"] is defined and (groups["CypressEN"]|length>0)
    - groups["CypressPN"] is defined and (groups["CypressPN"]|length>0)

- name: Klaytn kgen tool - Generate static-nodes.json for SENs
  copy:
    content: "{{ static_nodes_knis_sen }}"
    dest: "{{ homi_root }}/output/static-nodes-sen.json"
    force: yes
  when:
    - not remoteNode|bool
    - groups["ServiceChainEN"] is defined and (groups["ServiceChainEN"]|length>0)
    - groups["ServiceChainPN"] is defined and (groups["ServiceChainPN"]|length>0)

- name: Klaytn kgen tool - Generate static-nodes.json for PNs
  copy:
    src: "{{ homi_root }}/output/static-nodes-cn.json"
    dest: "{{ homi_root }}/output/static-nodes-pn.json"
    force: yes
  when:
    - not remoteNode|bool
    - groups["CypressPN"] is defined and (groups["CypressPN"]|length>0)

- name: Klaytn kgen tool - Generate static-nodes.json for SPNs
  copy:
    src: "{{ homi_root }}/output/static-nodes-scn.json"
    dest: "{{ homi_root }}/output/static-nodes-spn.json"
    force: yes
  when:
    - not remoteNode|bool
    - groups["ServiceChainPN"] is defined and (groups["ServiceChainPN"]|length>0)

- name: Klaytn kgen tool - Modify static-nodes.json for PNs
  replace:
    path: "{{ homi_root }}/output/static-nodes-pn.json"
    regexp: "@{{ hostvars[item]['ansible_host'] }}"
    replace: "@{{ hostvars[item]['privateIP'] }}"
  loop: "{{ groups['CypressCN'] }}"
  when:
    - not remoteNode|bool
    - groups["CypressPN"] is defined and (groups["CypressPN"]|length>0)

- name: Klaytn kgen tool - Modify static-nodes.json for SPNs
  replace:
    path: "{{ homi_root }}/output/static-nodes-spn.json"
    regexp: "@{{ hostvars[item]['ansible_host'] }}"
    replace: "@{{ hostvars[item]['privateIP'] }}"
  loop: "{{ groups['ServiceChainCN'] }}"
  when:
    - not remoteNode|bool
    - groups["ServiceChainPN"] is defined and (groups["ServiceChainPN"]|length>0)

# Below covers cases when there's no PNs or SPNs
- name: Klaytn kgen tool - Generate static-nodes.json for ENs when there's no PNs
  copy:
    src: "{{ homi_root }}/output/static-nodes-cn.json"
    dest: "{{ homi_root }}/output/static-nodes-en.json"
    force: yes
  when:
    - not remoteNode|bool
    - groups["CypressCN"] is defined and (groups["CypressCN"]|length>0)
    - groups["CypressPN"] is defined and (groups["CypressPN"]|length==0)
    - groups["CypressEN"] is defined and (groups["CypressEN"]|length>0)

- name: Klaytn kgen tool - Generate static-nodes.json for SPNs when there's no SPN
  copy:
    src: "{{ homi_root }}/output/static-nodes-scn.json"
    dest: "{{ homi_root }}/output/static-nodes-sen.json"
    force: yes
  when:
    - not remoteNode|bool
    - groups["ServiceChainCN"] is defined and (groups["ServiceChainCN"]|length>0)
    - groups["ServiceChainPN"] is defined and (groups["ServiceChainPN"]|length==0)
    - groups["ServiceChainEN"] is defined and (groups["ServiceChainEN"]|length>0)

- name: Klaytn kgen tool - Modify static-nodes.json for ENs when there's no PN
  replace:
    path: "{{ homi_root }}/output/static-nodes-en.json"
    regexp: "@{{ hostvars[item]['ansible_host'] }}"
    replace: "@{{ hostvars[item]['privateIP'] }}"
  loop: "{{ groups['CypressCN'] }}"
  when:
    - not remoteNode|bool
    - groups["CypressCN"] is defined and (groups["CypressCN"]|length>0)
    - groups["CypressPN"] is defined and (groups["CypressPN"]|length==0)
    - groups["CypressEN"] is defined and (groups["CypressEN"]|length>0)

- name: Klaytn kgen tool - Modify static-nodes.json for SPNs when there's no SPN
  replace:
    path: "{{ homi_root }}/output/static-nodes-sen.json"
    regexp: "@{{ hostvars[item]['ansible_host'] }}"
    replace: "@{{ hostvars[item]['privateIP'] }}"
  loop: "{{ groups['ServiceChainCN'] }}"
  when:
    - not remoteNode|bool
    - groups["ServiceChainCN"] is defined and (groups["ServiceChainCN"]|length>0)
    - groups["ServiceChainPN"] is defined and (groups["ServiceChainPN"]|length==0)
    - groups["ServiceChainEN"] is defined and (groups["ServiceChainEN"]|length>0)
